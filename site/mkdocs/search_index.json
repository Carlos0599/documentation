{
    "docs": [
        {
            "location": "/",
            "text": "ProfilePress\n is a WordPress plugin that makes building user account forms (such as login, registration, password reset, front-end edit user profile forms) and front-end user profile for WordPress \nstupidly simple\n.\n\n\nTo be sure, ProfilePress is incredibly easy to setup and start using.\nIt is built with the ease and simplicity that any person of any background can get up and running with ProfilePress.\nBut like any new thing, it always helps to have some documentation to get your feet off the ground.\n\n\nThe sidebar to the left will help you navigate your way around the documentation area of ProfilePress.\n\n\nSystem Requirements\n\n\n\n\nPHP 5.3+\n\n\nMySQL 5+\n\n\nWordPress 3.9+\n\n\n\n\nGetting help\n\n\nIf you have any question or contribution, do not hesitate to use the \ncontact form\n or shoot us a mail via \nsupport[at]profilepress.net\n.",
            "title": "Home"
        },
        {
            "location": "/#system-requirements",
            "text": "PHP 5.3+  MySQL 5+  WordPress 3.9+",
            "title": "System Requirements"
        },
        {
            "location": "/#getting-help",
            "text": "If you have any question or contribution, do not hesitate to use the  contact form  or shoot us a mail via  support[at]profilepress.net .",
            "title": "Getting help"
        },
        {
            "location": "/installation/",
            "text": "When you \nbuy a copy of ProfilePress\n, an email with a link to download the plugin is sent to you.\n\nDownload the plugin to a location in your computer.\n\n\nInstalling a WordPress plugin is very easy and ProfilePress isn't an exception.  \n\n\nFollow the step below to get ProfilePress installed in your WordPress powered site.\n\n\n\n\n\n\nLogin to your WordPress dashboard.\n\n\n\n\n\n\nNavigate to \nPlugins \n Add New\n and click on the \nUpload Plugin\n button.\n\n\n\n\n\n\nChoose the plugin zip file and click \nInstall Now\n.  \n\n\n\n\n\n\n\n\n\n\n\n\nOnce installed, click \nActivate\n.\n\n\n\n\n\n\nThat's it.",
            "title": "Installation"
        },
        {
            "location": "/uninstall/",
            "text": "To completely remove all ProfilePress data when you decides to uninstall it, ensure before-hand that \nRemove Data on Uninstall\n check box in ProfilePress \nsettings\n page is checked and saved.",
            "title": "Uninstall"
        },
        {
            "location": "/quickstart/",
            "text": "Firstly, ensure you've \ninstalled and activated\n \nProfilePress plugin\n.\n\n\nProfilePress is quick and easy to set up. No tearing out of hair, that's a promise.\n\n\nTo get ProfilePress up-and-running; click the \nLicense\n plugin menu, enter your license key (that was mailed to you) to the \nLicense Key\n field and hit the \nSave Changes\n button.\n\n\nAfter saving the license key, click the \nActivate License\n button.\n\n\n\n\nIf the license key is valid, you will see a notice to that effect.\n\n\n\n\nMind you; on activation, ProfilePress will create five pages that will serve as the login, registration, password reset, edit profile and front-end profile page of your WordPress site with the pages containing their respective shortcodes.\n\n\nProfilePress ships with a number of themes for each category but the templates with name \nSmiley\n is chosen by default for the login, registration, password reset, edit profile and front-end profile page.\n\n\nYou are free to switch themes at any time. Simply copy the shortcode of say a different login template and paste it in the page you wish to make your website custom login.\n\n\nThe following will be the URL for the custom login, registration, password reset, edit profile and front-end profile page.\n\n\n\n\nLog in: \nhttp://yoursite.com/log-in/\n\n\nRegistration or sign up: \nhttp://yoursite.com/sign-up/\n\n\nPassword Reset: \nhttp://yoursite.com/reset-password/\n\n\nFront-end edit profile: \nhttp://yoursite.com/edit-profile/\n\n\nFront-end user profile: \nhttp://yoursite.com/profile/username\n\n\n\n\nHenceforth, all visit to the default WordPress login, registration and password reset page will be redirected to their respective custom pages created with ProfilePress.\n\n\nUsers will also be redirected to the custom edit profile form page when they click or visit the default WordPress profile that has the following URL \nhttp://yoursite.com/wp-admin/profile.php\n.\n\n\nThe \nsend users welcome message\n that will send an email to newly registered users is also activated by default.",
            "title": "Quick Start"
        },
        {
            "location": "/shortcode-doc/",
            "text": "There are quite a number of shortcodes provided by ProfilePress to accomplish the task of building custom user account forms in WordPress. As a result, it will take time and effort to know them of the top of your head.\n\n\nTo quickly access the documentation of ProfilePress shortcodes, click the \nProfilePress Shortcodes\n button located at the top-right corner of the settings pages.\n\n\n\n\nThe documentation will slide in and occupy a section of the screen.\n\n\n\n\nClicking on the same button will conversely slideout / hide the documentation.\n\n\nProfilePress also include an an interactive and intuitive form builder for creating its various shortcodes.\n\n\nClicking the \nProfilePress shortcodes\n button located above the \npage design\n textarea reveals a list of the shortcodes.\n\n\n\n\n\n\nClicking on any of the shortcode reveals a form for populating the attributes of the selected shortcode.",
            "title": "Shortcodes Doc"
        },
        {
            "location": "/install-theme/",
            "text": "Installing ProfilePress login, registration, password reset, edit profile form and front-end profile themes are similar to that of WordPress.\n\n\nClick the \nInstall Theme\n ProfilePress menu.\n\n\nChoose the theme file from your PC and click \nInstall Now\n.\n\n\n\n\nIn few seconds, the theme will be installed.",
            "title": "Theme Installation"
        },
        {
            "location": "/build/login-form/",
            "text": "Say you want create or build a custom WordPress login page with the below codepen login design. Continue reading to see how easy it is to do with \nProfilePress\n plugin.\n\n\nSee the Pen \nLogin Form\n by Agbonghama Collins (\n@collizo4sky\n) on \nCodePen\n.\n\n\n\n\n\n\n  \n\n\nFirst off, install and activate \nProfilePress plugin\n.\n\n\nClick the \nLogin Form\n menu as show in the image below.\n\n\n\n\nClick the \nAdd New\n button.\n\n\n  \n\n\nEnter a name for the login form in \nTemplate Name\n field.  \n\n\nPaste the HTML and CSS code for the login form into the \nLogin Design\n and \nCSS Stylesheet\n textareas respectively.\n\n\n\n\n  \n\n\nNote:\n Error messages generated by login forms powered by ProfilePress are wrapped in a div as follows \ndiv class=\"profilepress-login-status\"\n thus the CSS class in the login stylesheet.\n\n\nClick the \nPreview Design\n button to see how the login form will look.\n\n\n\n\nFor ProfilePress to make this a functional WordPress login form, the form components which in this case are the username, password text field and the submit button will have to be replaced by their ProfilePress \nshortcode equivalents\n\n\nBelow is the final revision of the Login form code.\n\n\ndiv id=\nsc-login\n\n  \nh1\nLog in\n/h1\n\n  \ndiv class=\nsc-container\n\n     [login-username placeholder=\nUsername\n]\n     [login-password placeholder=\nPassword\n]\n     [login-submit value=\nLog In\n]\n  \n/div\n\n\n/div\n\n\n\n\n\nReplace the HTML form code earlier entered into the \nLogin Design\n textarea with the code above.\n\n\nTo make the login form available as a \nWordPress widget\n that can be drag and drop into a widgetized area / sidebar, check the \nMake this a Widget\n check box.\n\n\n\n\nSave and then click the \nBack to Catalog\n button.\n\n\nCopy the created login form shortcode, paste it to a WordPress page and publish.\n\n\n\n\nPreview the page and you will see the login form in action.\n\n\nA \nlive demo\n of this login form is available \nhere\n.",
            "title": "Login Form"
        },
        {
            "location": "/build/registration-form/",
            "text": "Let's see how \nProfilePress\n can turn the registration form below into a working WordPress form for registering users.\n\n\nSee the Pen \nLogin Form\n by Agbonghama Collins (\n@collizo4sky\n) on \nCodePen\n.\n\n\n\n\n\n\n\n\nClick the \nRegistration Form\n menu.\n\n\nClick the \nAdd New\n button.\n\n\nEnter a name for the registration form in \nTemplate Name\n field.  \n\n\nThe HTML and CSS code for the login form will go into the \nRegistration Design\n and \nCSS Stylesheet\n textareas respectively.\n\n\n\n\n\n\nNote:\n Error messages generated by registration forms powered by ProfilePress are wrapped in a \ndiv\n class \ndiv class=\"profilepress-reg-status\"\n thus the \n.profilepress-reg-status\n class in the CSS stylesheet.\n\n\nClick the \nPreview Design\n button to see how the registration form will look.\n\n\n\n\nIn order for \nProfilePress\n to make this a functional WordPress registration form, the form components which in this case are the username, email, password, first \n last name, Twitter profile text field; gender select drop-down and the submit button will have to be replaced by their ProfilePress \nshortcode equivalents\n\n\nBelow is the final revision of the Login form code.\n\n\ndiv id=\nsc-register\n\n  \nh1\nSign Up\n/h1\n\n  \ndiv class=\nsc-container\n\n    [reg-username title=\nUsername\n placeholder=\nUsername\n]\n    [reg-email title=\nEmail Address\n placeholder=\nEmail Address\n]\n    [reg-password title=\nPassword\n placeholder=\nPassword\n]\n    [reg-first-name title=\nFirst Name\n placeholder=\nFirst Name\n]\n    [reg-last-name title=\nLast Name\n placeholder=\nLast Name\n]\n    [reg-cpf key=\ngender\n type=\nselect\n title=\nGender\n]\n    [reg-cpf key=\nTwitter Profile URL\n type=\ntext\n placeholder=\nTwitter Profile URL\n]\n    [reg-submit value=\nRegister\n]\n  \n/div\n\n\n/div\n\n\n\n\n\nThe shortcode for the form fields are pretty easy to understand except for that of the \nTwitter Profile URL\n and \nGender\n (which are \ncustom profile fields\n).\n\n\nThe \n[reg-cpf]\n shortcode is used for adding custom fields to ProfilePress powered registration form.\n\n\n\n\nCustom fields are fields added to WordPress to extend its profile fields.\n\n\nBy default, WordPress doesn't include the `Gender` and `Twitter profile` fields.\n\nThese fields and few other\n are automatically added to WordPress when ProfilePress plugin is installed and activated.\n\n\n\n\n\n\n\nReplace the HTML form code earlier entered into the \nRegistration Design\n textarea with the revised code above.\n\n\nEnter the notification text that will be displayed after a successful user registration into the \nMessage on successful registration\n field.\n\n\n\n\nTo make the registration form available as a WordPress widget, tick the \nMake this a Widget\n check box.\n\n\n\n\nSave and then click the \nBack to Catalog\n button.\n\n\nCopy the created registration form shortcode, paste it to a WordPress page and publish.\n\n\n\n\nPreview the page and you will see the registration form in action.\n\n\nA \nlive demo\n of this registration form is available \nhere\n.",
            "title": "Registration Form"
        },
        {
            "location": "/build/password-reset/",
            "text": "Let's see how \nProfilePress\n can turn the password-reset form below into a working WordPress form for resetting users passwords.\n\n\nSee the Pen \nMemories Password Reset Form\n by Agbonghama Collins (\n@collizo4sky\n) on \nCodePen\n.\n\n\n\n\n\n\n\n\nClick the \nPassword Reset\n menu.\n\n\nClick the \nAdd New\n button.\n\n\nEnter a name for the password-reset form in \nTemplate Name\n field.  \n\n\nThe HTML and CSS code for the password-reset form will go into the \nPassword Reset Design\n and \nCSS Stylesheet\n textareas respectively.\n\n\n\n\n\n\nNote:\n Error messages generated by password reset forms powered by ProfilePress are wrapped in a \ndiv\n with class \ndiv class=\"profilepress-reg-status\"\n thus the \n.profilepress-reg-status\n CSS class in the stylesheet.\n\n\nClick the \nPreview Design\n button to see how the form will look.\n\n\n\n\nIn order for \nProfilePress\n to make this a functional password reset form, the form components which in this case are the username / email text field and the submit button will have to be replaced by their ProfilePress \nshortcode equivalents\n\n\nBelow is the final revision of the Login form code.\n\n\ndiv id=\nsc-password\n\n  \nh1\nReset Password\n/h1\n\n  \ndiv class=\nsc-container\n\n    [user-login title=\nUsername or Email\n placeholder=\nUsername or Email\n]\n    [reset-submit value=\nGet New Password\n]\n  \n/div\n\n\n/div\n\n\n\n\n\nReplace the HTML form code earlier entered into the \nPassword Reset Design\n textarea with the revised code above.\n\n\nEnter the notification text that will be displayed (after the reset request has been received for processing by WordPress internals) into the \nMessage on successful registration\n field.\n\n\n\n\nTo make the password reset form available as a WordPress widget, tick the \nMake this a Widget\n check box.\n\n\n\n\nSave and then click the \nBack to Catalog\n button.\n\n\nCopy its shortcode, paste it to a WordPress page and publish.\n\n\n\n\nPreview the page and you will see the registration form in action.\n\n\nA \nlive demo\n of this password reset form is available \nhere\n.",
            "title": "Password Reset Form"
        },
        {
            "location": "/build/edit-profile/",
            "text": "Using the form design below, let's build a custom edit-profile page where users can edit their profile information at the front-end of your website without having to do so in their WordPress dashboard.\n\n\nSee the Pen \nMemories Edit Profile Form\n by Agbonghama Collins (\n@collizo4sky\n) on \nCodePen\n.\n\n\n\n\n\n\n\n\nClick the \nFront-end Edit Profile\n menu.\n\n\nClick the \nAdd New\n button at the top right corner of the page.\n\n\nEnter a name for the edit-profile form in \nTemplate Name\n field.\n\n\nThe HTML and CSS code for the form will go into the \nPage Design\n and \nCSS Stylesheet\n textareas respectively.\n\n\n\n\n\n\nNote:\n Error messages generated by edit profile forms powered by ProfilePress are wrapped in a \ndiv\n with class \ndiv class=\"profilepress-edit-profile-status\"\n thus the CSS class in the stylesheet.\n\n\nClick the \nPreview Design\n button to see how the form will look.\n\n\n\n\nIn order for \nProfilePress\n to make this a form functional, the form components will have to be replaced by their ProfilePress \nshortcode equivalents\n\n\nBelow is the final revision of the form code.\n\n\ndiv id=\nsc-edprofile\n\n  \nh1\nEdit Profile Form\n/h1\n\n  \ndiv class=\nsc-container\n\n    [edit-profile-username title=\nUsername\n placeholder=\nUsername\n]\n    [edit-profile-email title=\nEmail Address\n placeholder=\nEmail Address\n]\n    [edit-profile-password title=\nPassword\n placeholder=\nPassword\n]\n    [edit-profile-website title=\nWebsite\n placeholder=\nWebsite\n]\n    [edit-profile-first-name title=\nFirst Name\n placeholder=\nFirst Name\n]\n    [edit-profile-last-name title=\nLast Name\n placeholder=\nLast Name\n]\n    [edit-profile-bio title=\nBio\n placeholder=\nBio\n]\n    [edit-profile-cpf key=\ngender\n type=\nselect\n title=\nGender\n placeholder=\nGender\n]\n    [edit-profile-cpf key=\nfacebook\n type=\ntext\n title=\nFacebook Profile URL\n placeholder=\nFacebook Profile URL\n]\n    [edit-profile-cpf key=\ntwitter\n type=\ntext\n title=\nTwitter Profile URL\n placeholder=\nTwitter Profile URL\n]\n    [edit-profile-cpf key=\ngoogle\n type=\ntext\n title=\nGoogle+ Profile URL\n placeholder=\nGoogle+ Profile URL\n]\n    [edit-profile-cpf key=\nlinkedin\n type=\ntext\n title=\nLinkedIn Profile URL\n placeholder=\nLinkedIn Profile URL\n]\n    [edit-profile-submit value=\nSave Changes\n]\n  \n/div\n\n\n/div\n\n\n\n\n\nThe shortcode for the form fields are pretty easy to understand except for Gender, Facebook Profile URL, Twitter Profile URL, Google+ Profile URL and LinkedIn Profile URL which are custom created \nprofile fields\n.\n\n\nNote:\n The \n[edit-profile-cpf]\n shortcode is used for adding custom profile fields to edit profile forms.\n\n\nReplace the HTML form code we earlier entered into the \nPage Design\n textarea with the revised code above.\n\n\nEnter the notification text that will be displayed after a user successfully edited their profile into the \nProfile Edited Message\n field.\n\n\n\n\nTo make the password reset form available as a WordPress widget, tick the \nMake this a Widget\n check box.\n\n\n\n\nSave and then click the \nBack to Catalog\n button.\n\n\nCopy its shortcode, paste it to a WordPress page and publish.\n\n\n\n\nPreview the page and you will see the registration form in action.\n\n\nA \nlive demo\n is available \nhere\n.\n\n\nNote:\n To gain access to the form, you'll have to log in to the site. Use \ndemo\n as the username and password.",
            "title": "Edit Profile Form"
        },
        {
            "location": "/build/user-profile/",
            "text": "In this tutorial, we'll learn how to build a WordPress front-end user profile (card) with ProfilePress using the template below.\n\n\nSee the Pen \nUser profile \n by Agbonghama Collins (\n@collizo4sky\n) on \nCodePen\n.\n\n\n\n\n\n\nBefore we go into the tutorial proper, it is worth noting how the front-end user profile works.\n\n\nThe URL to a user profile with username \ndemo\n is accessible via \nhttp://your site.com/profile/demo\n.\nIf users are logged in to the site, accessing \nhttp://your site.com/profile/\n will reveal their profile.\n\n\nClick the \nFront-end Profile\n menu.\n\n\nClick the \nAdd New\n button.\n\n\nEnter a name for the user profile card in \nTemplate Name\n field.  \n\n\nThe HTML and CSS code for the password-reset form will go into the \nPage Design\n and \nCSS Stylesheet\n textareas respectively.\n\n\n\n\n\n\nClick the \nPreview Design\n button to see how the form will look.\n\n\n\n\nThe profile component or data will have to be replaced by their ProfilePress \nshortcode equivalents\n\n\nBelow is the final revision of the Login form code.\n\n\ndiv class=\nsc-user-profile\n\n  \nimg class=\navatar\n src=\n[user-avatar-url]\n /\n\n  \ndiv class=\nusername\n[profile-first-name] [profile-last-name ]\n/div\n\n  \ndiv class=\nbio\n\n    [profile-cpf key=\ncountry\n]\n  \n/div\n\n  \ndiv class=\ndescription\n\n    [profile-bio]\n  \n/div\n\n  \ndiv class=\ndata\n\n    \nspan class=\nentypo-heart\n Profiles Details\n/span\n\n  \n/div\n\n  \ndiv class=\nleft\nUsername\n/div\n\n  \ndiv class=\nright\n[profile-username]\n/div\n\n  \ndiv class=\nleft\nEmail\n/div\n\n  \ndiv class=\nright\n[profile-email]\n/div\n\n  \ndiv class=\nleft\nGender\n/div\n\n  \ndiv class=\nright\n[profile-cpf key=\ngender\n]\n/div\n\n  \ndiv class=\nleft\nWebsite\n/div\n\n  \ndiv class=\nright\n[profile-website]\n/div\n\n\n/div\n\n\n\n\n\nReplace the code earlier entered into the \nPage Design\n textarea with the revised code above.\n\n\nSave and then click the \nBack to Catalog\n button.\n\n\nCopy its shortcode, paste it to a WordPress page and publish.\n\n\n\n\nPreview the page to see the profile card.\n\n\nBe sure to \nlet ProfilePress know about the page containing this profile shortcode\n if you wish to make it the default profile theme for your website users.\n\n\nA \nlive demo\n is available \nhere\n.\n\n\nNote:\n You'll have to log in to see it. Use \ndemo\n as the username and password.\n\n\nAfter logging in, click this \nlink\n again.",
            "title": "Front-end Profile"
        },
        {
            "location": "/build/widgets/",
            "text": "ProfilePress\n ships with a tabbed login, registration and password reset widget that is customizable.\n\n\n\n\nAnd here is how it will look at the front-end of your website.\n\n\n\n\nCouldn't be more easier than this.\n\n\nCustom Widgets\n\n\nIf you've gone through the tutorial on building custom \nlogin\n, \nregistration\n, \npassword reset\n and \nedit profile\n forms, you will agree with me on the fact that ProfilePress makes it very easy to turn those forms into a widget by simply checking a checkbox.",
            "title": "Widgets"
        },
        {
            "location": "/build/widgets/#custom-widgets",
            "text": "If you've gone through the tutorial on building custom  login ,  registration ,  password reset  and  edit profile  forms, you will agree with me on the fact that ProfilePress makes it very easy to turn those forms into a widget by simply checking a checkbox.",
            "title": "Custom Widgets"
        },
        {
            "location": "/build/shortcodes/",
            "text": "ProfilePress uses a lot of shortcodes for its operations.\n\nBelow are links to the shortcode available for login, registration, password reset, edit profile form and front-end user profile.\n\n\n\n\nGlobal Shortcodes\n\n\nShortcodes for Login  form\n\n\nShortcodes for Registration Form\n\n\nShortcodes for Password Reset Form\n\n\nShortcodes for Edit Profile Form\n\n\nShortcodes for Front-end User Profile",
            "title": "Shortcode List"
        },
        {
            "location": "/configuration/redirections/",
            "text": "When ProfilePress is \ninstalled and activated\n, the custom pages it create for login, registration and password reset are automatically set as WordPress default. Thus when a users visit the following URLs:\n\n\n\n\nhttp://yoursite.com/wp-login.php\n\n\nhttp://yoursite.com/wp-login.php?action=register\n\n\nhttp://profilepress.net/wp-login.php?action=lostpassword\n\n\n\n\nThey will be redirect to the page containing the custom login, registration and password reset form created by ProfilePress.\n\n\nAn example:\n click \nhttp://profilepress.net/wp-login.php\n and you will be redirected to the website custom login page.\n\n\nTo alter these pages settings, click the \nSettings\n ProfilePress menu and go to the \nGlobal Settings\n section.\n\n\nLet's see how to redirect users to a custom WordPress page after they log in and log out of your website.\n\n\nUser Redirections\n\n\nTo redirect users to a custom page after they log in and log out, select the pages in \nRedirection\n section and save.\n\n\n\n\nIf you've created a custom \nedit profile page\n and want users to be redirected to the page when they click the \nYour Profile\n link in WordPress dashboard, check the activate checkbox of \nEdit User Profile\n.\n\n\n\n\nCustom Redirections\n\n\nStarting from version 1.1.0, custom redirect can now be set per login and registration shoortcodes via the \nredirect\n attribute.\n\n\nFor example, a custom login page with the shortcode\n\n\n[profilepress-login id=\"2\" redirect=\"http://xyz.com/welcome\"]\n will redirect users to the URL \nhttp://xyz.com/welcome\n after they are logged in.\n\n\nSimilarly, a registration page with the shortcode\n\n\n[profilepress-registration redirect=\"http://xyz.com/welcome\"]\n will log users in and redirect them to the \nhttp://xyz.com/welcome\n after they successfully create an account.",
            "title": "Redirections"
        },
        {
            "location": "/configuration/redirections/#user-redirections",
            "text": "To redirect users to a custom page after they log in and log out, select the pages in  Redirection  section and save.   If you've created a custom  edit profile page  and want users to be redirected to the page when they click the  Your Profile  link in WordPress dashboard, check the activate checkbox of  Edit User Profile .",
            "title": "User Redirections"
        },
        {
            "location": "/configuration/redirections/#custom-redirections",
            "text": "Starting from version 1.1.0, custom redirect can now be set per login and registration shoortcodes via the  redirect  attribute.  For example, a custom login page with the shortcode  [profilepress-login id=\"2\" redirect=\"http://xyz.com/welcome\"]  will redirect users to the URL  http://xyz.com/welcome  after they are logged in.  Similarly, a registration page with the shortcode  [profilepress-registration redirect=\"http://xyz.com/welcome\"]  will log users in and redirect them to the  http://xyz.com/welcome  after they successfully create an account.",
            "title": "Custom Redirections"
        },
        {
            "location": "/configuration/front-end-profile/",
            "text": "After building a \ncustom front-end user profile\n, inserted the generated shortcode into a published page, we still need to inform ProfilePress about the page that contains the profile shortcode so it knows what page to use in rendering the front-end profile.\n\n\nIf this isn't done, users profile won't be accessible via the url \nhttp://yoursite.com/profile/username\n where \nhttp://yoursite.com\n is your website username and \nusername\n is a user's username.\n\n\nSee the succinct guide below on how to get it done.\n\n\n\n\n\n\nClick the \nSettings\n menu item.\n\n\n\n\n\n\nUnder \nFront-end Profile Settings\n section, select the page with the profile shortcode in \nPage with User Profile Shortcode\n and save.\n\n\n\n\n\n\n\n\nFinally, flush the rewrite rule by navigating to \nSettings \n Permalinks\n and clicking the Save Changes button.\n\n\nWhen the profile url (http://yoursite.com/profile/username) is visited, ProfilePress will used the page that was set above to render the profile page.\n\n\nTo redirect WordPress author page of users to their front-end profile, tick the \nConvert Authors to Profile\n checkbox.",
            "title": "Front-end Profile"
        },
        {
            "location": "/configuration/registration/",
            "text": "After building a \ncustom registration page\n and making it \nWordPress default\n, ProfilePress provides the following features to enhance the user registration experience.\n\n\n\n\nAutomagic user login after registration\n\n\nSend users a welcome message after registration\n\n\n\n\nAutomagic Login\n\n\nTo automatically log in users immediately they successfully registered an account, follow the steps below.\n\n\n\n\nClick the ProfilePress \nSettings\n menu.\n\n\nUnder \nRegistration Settings\n, check the \nEnable auto-login\n checkbox\n\n\n\n\n\n\nWelcome Message\n\n\nStill on the \nRegistration Settings\n, check the \nEnable welcome message\n check box to activate the welcome message module and configure the welcome message at \nWelcome Message Settings\n\n\n\n\nYou can also use the following placeholders in the message.\n\n\n\n\n{{username}}\n - Username of the registered user.\n\n\n{{password}}\n - Password of the registered user.\n\n\n{{site_title}}\n - Site title as defined in General Settings\n\n\n{{first_name}}\n - First Name entered by user on registration.\n\n\n{{last_name}}\n - Last Name entered by user on registration.\n\n\n\n\nNote:\n The purpose of the \ncontent-Type\n field is to describe the data contained in the message body (could be HTML or plain text) so that the email client can accurately parse the content.",
            "title": "Registration Sugars"
        },
        {
            "location": "/configuration/registration/#automagic-login",
            "text": "To automatically log in users immediately they successfully registered an account, follow the steps below.   Click the ProfilePress  Settings  menu.  Under  Registration Settings , check the  Enable auto-login  checkbox",
            "title": "Automagic Login"
        },
        {
            "location": "/configuration/registration/#welcome-message",
            "text": "Still on the  Registration Settings , check the  Enable welcome message  check box to activate the welcome message module and configure the welcome message at  Welcome Message Settings   You can also use the following placeholders in the message.   {{username}}  - Username of the registered user.  {{password}}  - Password of the registered user.  {{site_title}}  - Site title as defined in General Settings  {{first_name}}  - First Name entered by user on registration.  {{last_name}}  - Last Name entered by user on registration.   Note:  The purpose of the  content-Type  field is to describe the data contained in the message body (could be HTML or plain text) so that the email client can accurately parse the content.",
            "title": "Welcome Message"
        },
        {
            "location": "/configuration/password-reset/",
            "text": "ProfilePress allows for the customization of the password reset message sent by WordPress.\n\n\nTo customize the message:\n\n\n\n\nClick the ProfilePress \nSettings\n menu.\n\n\nConfigure the email in \nPassword Reset Email Settings\n.\n\n\n\n\n\n\nThe following placeholders are available for use:\n\n\n\n\n{{username}}\n - Username of the user.\n\n\n{{password_reset_link}}\n - URL to reset password.",
            "title": "Password Reset"
        },
        {
            "location": "/configuration/custom-fields/",
            "text": "Although we are quite satisfied with the default profile fields in WordPress profile page; a need to add custom fields might arise in order to collect additional information from your website users.\n\n\nAn Example\n\n\nWordPress profile do not include a gender field thus, you are oblivious of the number of users that are male and female.\n\n\nHow about the Contact info? By default, only E-mail and website are included in WordPress.\n\n\n\n\nProfilePress makes adding fields to \ncontact info\n and creating custom profile fields easy in WordPress.\n\n\nBefore we go over the process of adding custom fields to WordPress, it's worth noting that when ProfilePress is installed and activated, the following are added to the \ncontact info\n section: Facebook, Twitter, LinkedIn and Google+.\n\n\n\n\nAnd a \nGender\n custom field is added beneath the \nOther Information section\n.\n\n\nHaving said all that, let's see how custom profile fields are created with ProfilePress.\n\n\nCustom Fields in Contact Info.\n\n\nTo add more contact field to the \ncontact info\n section of WordPress profile, follow the instructions below.\n\n\nClick the \nProfile Contact Info\n menu link.\n\n\nClick the Add New button.\n\n\n\n\nEnter the field's label and key.\n\n\n\n\n\n\nThe label is what is shown besides the contact info field while the key is used internally by ProfilePress and WordPress.\n\n\n\nSay you want to a field for users to enter their Reddit profile URL, enter \nReddit Username\n as the label, \nreddit\n as the key then hit the \nAdd Contact\n button.\n\n\n\n\n\n\n\nAfter saving, you should see the Reddit field added to \nContact Info\n.\n\n\n\n\nCustom Profile Fields in WordPress Profile\n\n\nTo add a custom profile field that will appear beneath the Other Information section in default WordPress profile, see the instructions below.\n\n\nClick the \nCustom Profile Fields\n menu.\n\n\nClick the \nAdd New\n button.\n\n\nFill out the form and click the \nAdd Field\n button.\n\n\nForm Fields Description\n\n\nBelow are the form fields and their description.\n\n\n\n\n\n\nField Label:\n the label or text that will be shown besides the custom field.\n\n\n\n\n\n\nField Key:\n the key is used internally by ProfilePress in creating and saving values for the custom field. The field key cannot contain any character except for a lower-case alphabet, number and underscore.\n\n\n\n\n\n\nField Description:\n Description of the field. This is the text that will be shown below the custom field.\n\n\n\n\n\n\nType:\n The form element to use as the form field. For now, only text field (\ninput type=\"text\"\n), textarea, select dropdown and radio button are supported.\n\n\n\n\n\n\nOptions:\n Only for use when multiple Choices i.e Select Box and Radio Buttons is chosen as the field type.\n\nSay you want to add a radio button with options \"yes\" and \"no\"; choose Radio Buttons in \nType\n and add the radio button options to the Options field separated\nby a comma ( i.e. yes, no ).\n\nSame goes for the select and check box.\n\n\n\n\n\n\nCustom Profile Fields in ProfilePress\n\n\nIt is worth noting that \ncustom contact info.\n and \ncustom profile fields\n are both custom profile fields; at least, that's how \nProfilePress\n treats them.\n\n\nWith that cleared, let's see how custom fields can be added to login, registration, edit profile forms and front-end user profile pages created with ProfiPress.\n\n\nRegistration Forms\n\n\nTo add a custom profile field to a \nregistration form\n created by ProfilePress, the services of \n[reg-cpf]\n shortcode is employed.\n\n\nThe two important attribute for this shortcode are the field \nkey\n and \ntype\n.\n\n\nUsing the reddit contact info. we created earlier; to add a form field to a ProfilePress registration where users can enter their reddit profile url during registration, the shortcode will pretty much be as follows save for the title, class, id, value and required attributes.\n\n\n[reg-cpf key=\nreddit\n type=\ntext\n class=\n id=\n required]\n\n\n\n\nNote:\n the \nrequired\n unnamed attribute specifies that the user must fill in a value in the field before submitting the form.\n\n\nEdit-profile Forms\n\n\nTo add a custom profile field to an \nedit profile form\n created by ProfilePress, the services of \n[edit-profile-cpf]\n shortcode is employed.\n\n\nSay add form field where users can edit their reddit profile URL is to be added to an \nedit profile form\n, the shortcode below is basically wwhat is needed.\n\n\n[edit-profile-cpf key=\nreddit\n type=\ntext\n]\n\n\n\n\nFront-end User Profile\n\n\nTo display the value or data of the reddit profile field (saved by users either during registration or editing their profile) in a \nfront-end user profile\n, use the \n[profile-cpf]\n shortcode like so:\n\n\n[profile-cpf key=\nreddit\n]",
            "title": "Custom Fields"
        },
        {
            "location": "/configuration/custom-fields/#an-example",
            "text": "WordPress profile do not include a gender field thus, you are oblivious of the number of users that are male and female.  How about the Contact info? By default, only E-mail and website are included in WordPress.   ProfilePress makes adding fields to  contact info  and creating custom profile fields easy in WordPress.  Before we go over the process of adding custom fields to WordPress, it's worth noting that when ProfilePress is installed and activated, the following are added to the  contact info  section: Facebook, Twitter, LinkedIn and Google+.   And a  Gender  custom field is added beneath the  Other Information section .  Having said all that, let's see how custom profile fields are created with ProfilePress.",
            "title": "An Example"
        },
        {
            "location": "/configuration/custom-fields/#custom-fields-in-contact-info",
            "text": "To add more contact field to the  contact info  section of WordPress profile, follow the instructions below.  Click the  Profile Contact Info  menu link.  Click the Add New button.   Enter the field's label and key.    The label is what is shown besides the contact info field while the key is used internally by ProfilePress and WordPress.  Say you want to a field for users to enter their Reddit profile URL, enter  Reddit Username  as the label,  reddit  as the key then hit the  Add Contact  button.    After saving, you should see the Reddit field added to  Contact Info .",
            "title": "Custom Fields in Contact Info."
        },
        {
            "location": "/configuration/custom-fields/#custom-profile-fields-in-wordpress-profile",
            "text": "To add a custom profile field that will appear beneath the Other Information section in default WordPress profile, see the instructions below.  Click the  Custom Profile Fields  menu.  Click the  Add New  button.  Fill out the form and click the  Add Field  button.  Form Fields Description  Below are the form fields and their description.    Field Label:  the label or text that will be shown besides the custom field.    Field Key:  the key is used internally by ProfilePress in creating and saving values for the custom field. The field key cannot contain any character except for a lower-case alphabet, number and underscore.    Field Description:  Description of the field. This is the text that will be shown below the custom field.    Type:  The form element to use as the form field. For now, only text field ( input type=\"text\" ), textarea, select dropdown and radio button are supported.    Options:  Only for use when multiple Choices i.e Select Box and Radio Buttons is chosen as the field type. \nSay you want to add a radio button with options \"yes\" and \"no\"; choose Radio Buttons in  Type  and add the radio button options to the Options field separated\nby a comma ( i.e. yes, no ). \nSame goes for the select and check box.",
            "title": "Custom Profile Fields in WordPress Profile"
        },
        {
            "location": "/configuration/custom-fields/#custom-profile-fields-in-profilepress",
            "text": "It is worth noting that  custom contact info.  and  custom profile fields  are both custom profile fields; at least, that's how  ProfilePress  treats them.  With that cleared, let's see how custom fields can be added to login, registration, edit profile forms and front-end user profile pages created with ProfiPress.  Registration Forms  To add a custom profile field to a  registration form  created by ProfilePress, the services of  [reg-cpf]  shortcode is employed.  The two important attribute for this shortcode are the field  key  and  type .  Using the reddit contact info. we created earlier; to add a form field to a ProfilePress registration where users can enter their reddit profile url during registration, the shortcode will pretty much be as follows save for the title, class, id, value and required attributes.  [reg-cpf key= reddit  type= text  class=  id=  required]  Note:  the  required  unnamed attribute specifies that the user must fill in a value in the field before submitting the form.  Edit-profile Forms  To add a custom profile field to an  edit profile form  created by ProfilePress, the services of  [edit-profile-cpf]  shortcode is employed.  Say add form field where users can edit their reddit profile URL is to be added to an  edit profile form , the shortcode below is basically wwhat is needed.  [edit-profile-cpf key= reddit  type= text ]  Front-end User Profile  To display the value or data of the reddit profile field (saved by users either during registration or editing their profile) in a  front-end user profile , use the  [profile-cpf]  shortcode like so:  [profile-cpf key= reddit ]",
            "title": "Custom Profile Fields in ProfilePress"
        },
        {
            "location": "/social-login/configuration/",
            "text": "ProfilePress is bundled with a social login feature whereby users can log in to their existing account or create an account using their social media accounts.  \n\n\nCurrently, only Facebook, Twitter, LinkedIn, Google and GitHub are supported. More coming soon.\n\n\nSee the links below to learn how to create applications in the various supported social networks in order to get the required app credentials.\n\n\n\n\nCreating Facebook Applications\n\n\nCreating Twitter Applications\n\n\nCreating LinkedIn Applications\n\n\nCreating Google+ Application\n\n\nCreating GitHub Applications\n\n\n\n\nNote:\n The generated application credentials should go into appropriate form fields in \nSocial Login\n settings page and then saved.\n\n\n\n\nSocial Login in Registration \n Login Forms\n\n\nProfilePress ships with social login buttons for Facebook, Twitter, LinkedIn, Google and GitHub.\n\n\nBelow are the shortcodes for the social login buttons where \nsize\n is the font size of the button text.\n\n\nNote: the \nsize\n attribute is optional with a default value of 13(px).\n\n\n\n\n\n\nFacebook\n\n\n\n\n[social-button type=\nfacebook\n size=\n13\n]Sign in with Facebook[/social-button]\n\n\n\n\n\n\nTwitter\n\n\n\n\n[social-button type=\ntwitter\n size=\n13\n]Sign in with Twitter[/social-button]\n\n\n\n\n\n\nLinkedIn\n\n\n\n\n[social-button type=\nlinkedin\n size=\n13\n]Sign in with LinkedIn[/social-button]\n\n\n\n\n\n\nGoogle\n\n\n\n\n[social-button type=\ngoogle\n size=\n13\n]Sign in with Google[/social-button]\n\n\n\n\n\n\nGitHub\n\n\n\n\n[social-button type=\ngithub\n size=\n13\n]Sign in with Github[/social-button]\n\n\n\n\nTo add the buttons to a \nlogin\n and \nregistration form\n form created by ProfilePress, copy and pasted any of the button shortcode(s) to a desired location in the form.\n\n\nProfilePress also include the following shortcodes that returns the social login URL for the supported social networks incase you want to build your own buttons or customized links.\n\n\n\n\n[facebook-login-url]\n URL to login with Facebook.\n\n\n[twitter-login-url]\n  URL to login with Twitter.\n\n\n[linkedin-login-url]\n  URL to login with LinkedIn.\n\n\n[google-login-url]\n  URL to login with Google.\n\n\n[github-login-url]\n  URL to login with GitHub.",
            "title": "Configuration"
        },
        {
            "location": "/social-login/configuration/#social-login-in-registration-login-forms",
            "text": "ProfilePress ships with social login buttons for Facebook, Twitter, LinkedIn, Google and GitHub.  Below are the shortcodes for the social login buttons where  size  is the font size of the button text.  Note: the  size  attribute is optional with a default value of 13(px).    Facebook   [social-button type= facebook  size= 13 ]Sign in with Facebook[/social-button]   Twitter   [social-button type= twitter  size= 13 ]Sign in with Twitter[/social-button]   LinkedIn   [social-button type= linkedin  size= 13 ]Sign in with LinkedIn[/social-button]   Google   [social-button type= google  size= 13 ]Sign in with Google[/social-button]   GitHub   [social-button type= github  size= 13 ]Sign in with Github[/social-button]  To add the buttons to a  login  and  registration form  form created by ProfilePress, copy and pasted any of the button shortcode(s) to a desired location in the form.  ProfilePress also include the following shortcodes that returns the social login URL for the supported social networks incase you want to build your own buttons or customized links.   [facebook-login-url]  URL to login with Facebook.  [twitter-login-url]   URL to login with Twitter.  [linkedin-login-url]   URL to login with LinkedIn.  [google-login-url]   URL to login with Google.  [github-login-url]   URL to login with GitHub.",
            "title": "Social Login in Registration &amp; Login Forms"
        },
        {
            "location": "/social-login/facebook/",
            "text": "Visit \nhttps://developers.facebook.com\n and click the \nAdd New App\n menu link.\n\n\n\n\nOn the pop-up page, click the \nadvance setup\n link.\n\n\n\n\nEnter a name for your new app, choose an App Category and click on \nCreate App ID\n button.\n\n\n\n\nPerform the security check and submit\n\n\n\n\nNow you have successfully created a Facebook Application and you should be redirected to the Application page which should look like the one on the image below.\n\n\n\n\nCurrently, your application is in development or sandbox mode.\n\n\nTo get the App Live, click on \nStatus \n Review\n sidebar menu, slide the switch close to the app name to \nYes\n and finally, click the \nConfirm\n button.\n\n\n\n\nGo back to the application settings, click the \nAdd Platform\n button.\n\n\n\n\nSelect \nWebsite\n and enter your website URL in the corresponding form and save.\n\n\n\n\nCopy and save the \nApp ID\n and \nApp Secrete\n to the appropriate fields in ProfilePress \nSocial Login\n settings page.",
            "title": "Creating a Facebook Application"
        },
        {
            "location": "/social-login/twitter/",
            "text": "Log in to Twitter \ndeveloper center\n using your Twitter account and navigate to the \nApplication Management\n console.\n\n\nClick on the \nCreate New App button\n to initiate the Twitter application creation.\n\n\nFill the form and click the submit button to create the application.\n\n\n\n\nBelow are the form fields and their description.\n\n\nName:\n Display name of your application. Also use during user authentication.\n\n\nDescription:\n A short description of your website.\n\n\nWebsite:\n The full URL of your website. (prefixed with \nhttp://\n or \nhttps://\n)\n\n\nCallback URL:\n \nhttp://yoursite.com/wp-content/plugins/profilepress/social-login/?hauth.done=Twitter\n.\n\nReplace \nhttp://yoursite.com\n with your website URL.\n\n\nRead and agree to the \nDeveloper Agreement\n and finally, click the create button.\n\n\nWe're now done creating the application.\n\n\nTo get the application consumer key and secret needed by ProfilePress, navigate to the API Keys tab.\n\n\nThe API key and API secret is also referred to as the consumer key and consumer secret, respectively.\n\n\n\n\nAlthough not needed by ProfilePress, the access token and access token secrets are used by Twitter for users authentication.\n\n\nTo get these tokens; still at the API Keys tab, scroll downward and click on the \nCreate my access token\n button.\n\n\n\n\nRefresh the page and the application tokens will be shown to you.\n\n\n\n\nCopy and save the \nAPI keys\n and \nAPI secret\n to the appropriate fields in ProfilePress \nSocial Login\n plugin page.",
            "title": "Creating a Twitter Application"
        },
        {
            "location": "/social-login/linkedin/",
            "text": "Log in to \nLinkedIn Developer Network\n with your LinkedIn account.\n\n\nOn that page click on the \nAdd New Application\n link.\n\n\n\n\nFill the form and ensure all required fields (which has an asterisk. see the image below.\n\n\n\n\nEnter your email and phone number in the \nContact Info\n fields.\n\n\nTick the following checkbox in \nOAuth User Agreement\n: r_emailaddress, r_basicprofile, and r_contactinfo.\n\n\n\n\nEnter your website url in the \nOAuth 2.0\n and \nOAuth 1.0a Redirect URLs\n fields.\n\n\n\n\nAgree to the \nTerms of Service\n and click the \nAdd Application\n button to create the app.\n\n\n\n\nAfter creating the application, a success page containing the app keys and tokens will be displayed.\n\n\n\n\nCopy the \nAPI Key\n and \nSecret Key\n to the LinkedIn field in \nSocial Login\n settings page.",
            "title": "Creating a LinkedIn Application"
        },
        {
            "location": "/social-login/google/",
            "text": "Log in to \nGoogle Developers Console\n using your Google's account, click on the \nCreate Project\n button and fill the form to create a project.\n\n\n\n\nClick the newly created project to go to its dashboard.\n\n\nClick the \nAPI\n sub-menu beneath \nAPIs \n auth\n and the click \nGoogle+ API\n link in \nSocial APIs\n section.\n\n\n\n\nClick the \nEnable API\n button to activate it.\n\n\n\n\nTo get the \nClient ID\n and \nClient Secret\n keys, click the \nCredentials\n navigation link beneath  \nAPIs \n auth\n,\n\n\nClick the \nCreate new Client ID\n button and a popup page will be displayed.\n\nOn the popup, click the \nConfigure consent screen\n\n\n\n\nFill out the consent screen form and save.\n\n\n\n\nAt the client ID form, enter your website URL in the \nAuthorized JavaScript origins\n field and the code below into the \nAuthorized redirect URIs\n\n\nhttp://yoursite.com/wp-content/plugins/profilepress/social-login/?hauth.done=Google\n\n\n\n\nChange \nhttp://yoursite.com\n to your website URL.\n\n\n\n\nClick the \nCreate Client ID\n submit button. You will see the application credentials displayed as shown in the image below.\n\n\n\n\nCopy and paste the \nClient ID\n and \nClient secrete\n to the appropriate field in \nSocial Login\n settings page.",
            "title": "Creating a Google+ Application"
        },
        {
            "location": "/social-login/github/",
            "text": "Log in to GitHub and visit \nhttps://github.com/settings/applications\n.\n\n\nClick the \nRegister new application\n button.\n\n\nFill out the form as follows:\n\n\n\n\nApplication name:\n Could be your website name or title.\n\n\nHomepage URL:\n Your website URL\n\n\nApplication description:\n Description of your website.\n\n\nAuthorization callback URL:\n \nhttp://yoursite.com/wp-content/plugins/profilepress/social-login/?hauth.done=Github\n. Replace \nhttp://yoursite.com\n with your website URL.\n\n\n\n\n\n\nHit the \nRegister application\n button.\n\n\nYou will see the application's \nClient ID\n and \nClient Secret\n displayed.\n\n\n\n\nCopy and paste the \nClient ID\n and \nClient secrete\n to the appropriate field in \nSocial Login\n settings page.",
            "title": "Creating a GitHub Application"
        },
        {
            "location": "/extras/recaptcha/",
            "text": "reCAPTCHA\n is a free CAPTCHA service that helps protect websites against spam, abuse, malicious registrations and other forms of attacks where computers try to disguise themselves as a human.\n\n\nA \nCAPTCHA\n is a test to tell human and bots apart. It is easy for humans to solve, and pretty difficult for bots and other malicious software to figure out. By adding reCAPTCHA to a site, you can block automated software while helping your welcome users to enter with ease.\n\n\nRecently, the Google security team announced a new version called \nNo CAPTCHA reCAPTCHA\n that simply requires a check to a checkbox to differentiate humans from spammers.\n\n\n\n\nTo protect login, registration, password reset and edit profile forms created by \nProfilePress\n against spam and abuse using the new \nNo CAPTCHA reCAPTCHA\n, see the guide below.\n\n\nSetting up reCAPTCHA\n\n\nFirstly, you need to grab a reCAPTCHA site and secret key for your website domain. \nGet them here\n.\n\n\nClick the \nExtras\n ProfilePress menu go to the reCAPTCHA section.\n\n\nCheck the \nActivate reCAPTCHA\n checkbox, enter your domain site and secret key, select a theme and language and enter the error message to display when the CAPTCHA test is ignored or failed.\n\n\n\n\nDisplay the CAPTCHA in ProfilePress forms\n\n\nAdd the shortcode \n[pp-recaptcha]\n to to wherever you want the CAPTCHA to be displayed in the ProfilePress created (login, registration, password reset \n edit profile) forms. Preferably before the submit button.\n\n\nWant to see a demo? check out the \nlogin page\n of ProfilePress website.",
            "title": "reCAPTCHA"
        },
        {
            "location": "/extras/recaptcha/#setting-up-recaptcha",
            "text": "Firstly, you need to grab a reCAPTCHA site and secret key for your website domain.  Get them here .  Click the  Extras  ProfilePress menu go to the reCAPTCHA section.  Check the  Activate reCAPTCHA  checkbox, enter your domain site and secret key, select a theme and language and enter the error message to display when the CAPTCHA test is ignored or failed.",
            "title": "Setting up reCAPTCHA"
        },
        {
            "location": "/extras/recaptcha/#display-the-captcha-in-profilepress-forms",
            "text": "Add the shortcode  [pp-recaptcha]  to to wherever you want the CAPTCHA to be displayed in the ProfilePress created (login, registration, password reset   edit profile) forms. Preferably before the submit button.  Want to see a demo? check out the  login page  of ProfilePress website.",
            "title": "Display the CAPTCHA in ProfilePress forms"
        },
        {
            "location": "/extras/email-login/",
            "text": "By default, one can only log in to WordPress using their username and password. This can be a pain in the butt to users of your website if they forget their username and thus, they are left with no option but to do a password reset for them to get their username.\n\n\nProfilePress include a \nlog in with email\n feature which allows users to log in to your WordPress powered site with their email address instead of a username together with a password.\n\n\nTo activate this feature, click the \nExtras\n ProfilePress menu and activate it in \nLogin with Email\n section.\n\n\n\n\nDo not forget to click \nSave Changes\n button.",
            "title": "Log in With Email"
        },
        {
            "location": "/extras/global-admin-password/",
            "text": "This feature allows the WordPress site owner or administrators with \nadmin privileges or role\n to login to any user's account via their password.\n\n\nSay a user of your site is having difficulties getting a feature that your website provides working, with the \nglobal admin password\n feature activated, you can login to the user's account using your own password together with the username of the user.\n\n\nPrecaution:\n Do not activate this feature unless absolutely necessary and when you are done, ensure you deactivate it.\n\n\nTo activate this feature, click the \nExtras\n ProfilePress menu and activate it in \nGlobal Admin Password\n section.\n\n\n\n\nDo not forget to click \nSave Changes\n button.",
            "title": "Global Administrator Password"
        },
        {
            "location": "/extras/user-moderation/",
            "text": "ProfilePress\n include a user moderation module for approving newly registered users, blocking and unblocking users account.\n\n\nTo activate this feature, click the \nExtras\n ProfilePress menu and activate it in \nUser Moderation\n section.\n\n\n\n\nAfter activating this feature, new users accounts will be in \npending\n mode until the account is approved by an admin.\n\n\n\n\nTriggered Notifications\n\n\nWhen a user's account is approved, blocked or unblocked; an email notification is sent to the user to that effect.\n\n\nThe notification message is fully customizable at ProfilePress \nSettings\n plugin page.",
            "title": "User Moderation"
        },
        {
            "location": "/extras/user-moderation/#triggered-notifications",
            "text": "When a user's account is approved, blocked or unblocked; an email notification is sent to the user to that effect.  The notification message is fully customizable at ProfilePress  Settings  plugin page.",
            "title": "Triggered Notifications"
        },
        {
            "location": "/advanced/theme-development/",
            "text": "In this tutorial, we'll learn how to build ProfilePress themes for login, registration, password reset, edit profile form and front-end profile which can be installed in the \ntheme installer\n plugin page.\n\n\nWhen these themes are installed, they are automatically added to their respective catalog.\n\n\nTerminology\n\n\nTemplates:\n Themes for login, registration, password reset, edit profile and front-end profile are individually referred to as \ntemplates\n.\n\nE.g.  \"login templates\" refers to a login form theme.\n\n\nTheme Type:\n Login, registration, password reset, edit profile and front-end profile are individually referred to as \nTheme type\n.\nE.g. The sentence \"The templates of login theme type\" means ProfilePress login form themes.\n\n\nTemplate Structure\n\n\nBelow is the structure of ProfilePress theme folder.\nFor it to be considered a theme, it must be archived in zip format eg \ndoyin-template.zip\n\n\nlogin/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the login template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n\n|- registration/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the registration template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n|- success.txt         # Message on successful user registration\n\n|- password-reset/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the password reset template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n|- success.txt         # Message displayed on successful password reset\n\n|- edit-user-profile/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n|- success.txt         # Message displayed on successful editing a profile\n\n|- front-end-profile/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the template\n|- structure.html      # Profile design\n|- stylesheet.css      # CSS stylesheet\n\n\n\n\nOne or more templates can be packaged together as a theme but only one template per theme type s allowed.\n\n\nFor example, you can decide to package the following as a theme: login and registration templates; login and password reset templates; only a front end profile template or templates for each of the theme type but you can't package a theme that consist of two templates for a login form.\n\n\nAll assets for the templates be it images, css stysheet, javascripts etc should go into the \nassets\n folder.\n\n\nIncluding Images, External CSS and JavaScript Libraries\n\n\nTo include images and external libraries to a ProfilePress template, place the files inside the \nassets\n folder and use the template tag \n{{theme_assets}}\n (a placeholder for the URL to the assets folder) to call or reference the files.\n\n\nAssuming you are creating a login template that utilizes \nBootstrap\n. To include the bootstrap css file:\n\n\nFirstly, copy the \nbootstrap.min.css\n file to the \nassets\n folder of your theme package.\n\n\nTo reference the CSS in the login form template, include the code below into the \nstructure.html\n file. Mind you, \nstructure.html\n is where the HTML code for the login form is inserted.\n\n\nlink rel=\nstylesheet\n href=\n{{theme_assets}}/bootstrap.min.css\n\n\n\n\n\nTo reference it in your CSS stylesheet, see the code below.\n\n\n@import url( {{theme_assets}}/bootstrap.min.css );\n\n\n\n\nHere is a \nsample theme file\n. download, explore and install it to learn more.",
            "title": "Theme Development"
        },
        {
            "location": "/advanced/theme-development/#terminology",
            "text": "Templates:  Themes for login, registration, password reset, edit profile and front-end profile are individually referred to as  templates . \nE.g.  \"login templates\" refers to a login form theme.  Theme Type:  Login, registration, password reset, edit profile and front-end profile are individually referred to as  Theme type .\nE.g. The sentence \"The templates of login theme type\" means ProfilePress login form themes.",
            "title": "Terminology"
        },
        {
            "location": "/advanced/theme-development/#template-structure",
            "text": "Below is the structure of ProfilePress theme folder.\nFor it to be considered a theme, it must be archived in zip format eg  doyin-template.zip  login/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the login template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n\n|- registration/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the registration template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n|- success.txt         # Message on successful user registration\n\n|- password-reset/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the password reset template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n|- success.txt         # Message displayed on successful password reset\n\n|- edit-user-profile/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the template\n|- structure.html      # Form structure / design\n|- stylesheet.css      # CSS stylesheet\n|- success.txt         # Message displayed on successful editing a profile\n\n|- front-end-profile/\n|- assets/             # Images, JavaScript and other component folder\n|- name.txt            # Name or title of the template\n|- structure.html      # Profile design\n|- stylesheet.css      # CSS stylesheet  One or more templates can be packaged together as a theme but only one template per theme type s allowed.  For example, you can decide to package the following as a theme: login and registration templates; login and password reset templates; only a front end profile template or templates for each of the theme type but you can't package a theme that consist of two templates for a login form.  All assets for the templates be it images, css stysheet, javascripts etc should go into the  assets  folder.",
            "title": "Template Structure"
        },
        {
            "location": "/advanced/theme-development/#including-images-external-css-and-javascript-libraries",
            "text": "To include images and external libraries to a ProfilePress template, place the files inside the  assets  folder and use the template tag  {{theme_assets}}  (a placeholder for the URL to the assets folder) to call or reference the files.  Assuming you are creating a login template that utilizes  Bootstrap . To include the bootstrap css file:  Firstly, copy the  bootstrap.min.css  file to the  assets  folder of your theme package.  To reference the CSS in the login form template, include the code below into the  structure.html  file. Mind you,  structure.html  is where the HTML code for the login form is inserted.  link rel= stylesheet  href= {{theme_assets}}/bootstrap.min.css   To reference it in your CSS stylesheet, see the code below.  @import url( {{theme_assets}}/bootstrap.min.css );  Here is a  sample theme file . download, explore and install it to learn more.",
            "title": "Including Images, External CSS and JavaScript Libraries"
        },
        {
            "location": "/extensions/mailchimp/",
            "text": "The \nMailChimp\n ProfilePress extension integrates your ProfilePress powered \nregistration page\n with MailChimp by automatically subscribing users to a specific list immediately they complete registering an account.\n\n\nTo get this feature working on your WordPress powered site, ensure you have the \nextension\n installed and activated.\n\n\nClick the \nExtras\n ProfilePress menu link.\n\n\nAt the \nMailChimp Addon\n section, enter your MailChimp account \nAPI key\n into the API field and hit the \nSave Changes\n button for the plugin to fetch your mailing lists.\n\n\nSelect the list you want users to be subscribed to and save the changes.\n\n\n\n\nTo give users the option to decide whether to opt in or not to your list, add the shortcode \n[pp-mailchimp]\n to your custom \nregistration form\n.\n\n\nThe shortcode displays a checkbox alongside the label \nSubscribe to our email list.\n The label can be changed by entering your desired text into the \nCheckbox Label\n text field.\n\n\n\n\nNote:\n If the MailChimp checkbox isn't present in the registration form but the feature is still activated, new users will still be added to the list.\n\n\nManual Inclusion\n\n\nOne feature I love (and am pretty sure you will too) about this extension is the fact you can subscribe a list of emails en masse to your list from within the settings page.\n\n\nUsing the user details below as an example:\n\n\ntrisha@gmail.com, Trisha, Rice\nmatthew@outlook.com, Matthew, Stone\ngeremi@yahoo.com, Geremi, Njitap\n\n\n\n\nFormat:\n emailAddress, firstName, lastName.\n\nNote:\n only one user data per line.\n\n\nIf the data above is pasted into the \nManual Inclusion\n text area and the \nSubscribe\n button clicked, the selected email list will automatically be updated.\n\n\n\n\nThe process is ajaxified hence no page reload.\n\n\n\n \n\n      \nBuy MailChimp Extension",
            "title": "MailChimp"
        },
        {
            "location": "/extensions/mailchimp/#manual-inclusion",
            "text": "One feature I love (and am pretty sure you will too) about this extension is the fact you can subscribe a list of emails en masse to your list from within the settings page.  Using the user details below as an example:  trisha@gmail.com, Trisha, Rice\nmatthew@outlook.com, Matthew, Stone\ngeremi@yahoo.com, Geremi, Njitap  Format:  emailAddress, firstName, lastName. Note:  only one user data per line.  If the data above is pasted into the  Manual Inclusion  text area and the  Subscribe  button clicked, the selected email list will automatically be updated.   The process is ajaxified hence no page reload.  \n  \n       Buy MailChimp Extension",
            "title": "Manual Inclusion"
        }
    ]
}